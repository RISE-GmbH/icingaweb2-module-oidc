<?php

/* originally from Icinga Web 2 X.509 Module | (c) 2018 Icinga GmbH | GPLv2 */
/* generated by icingaweb2-module-scaffoldbuilder | GPLv2+ */

namespace Icinga\Module\Oidc\Controllers;

use Icinga\Application\Config;
use Icinga\Application\Logger;
use Icinga\Module\Oidc\Common\Database;
use Icinga\Module\Oidc\Forms\BackendConfigForm;
use Icinga\Web\Notification;
use ipl\Html\Html;
use ipl\Web\Compat\CompatController;
use SQLite3;

class DatabaseController extends CompatController
{
    public function init()
    {
        $this->assertPermission('config/modules');

        parent::init();
    }

    public function initializeDbAction()
    {
        $this->addTitleTab("InitializeDB");
        $this->addContent(Html::tag("p",null,"Create sqlite database"));
        $clean = $this->params->shift("clean");
        $sqlFile = $this->Module()->getBaseDir().DIRECTORY_SEPARATOR."schema".DIRECTORY_SEPARATOR."sqlite.schema.sql";
        $sqlContent = file_get_contents($sqlFile);
        $db = Database::get();
        if($db->getConfig()->db=="sqlite"){
            if(!file_exists(dirname($db->getConfig()->dbname))){
                mkdir(dirname($db->getConfig()->dbname),0755,true);
            }
            if($clean != null){
                unlink($db->getConfig()->dbname);
            }

            $database = new SQLite3($db->getConfig()->dbname);
            try {
                $database->exec($sqlContent);

            }catch (\Throwable $e ){
                Logger::error($e->getMessage());
                Notification::error("Init error: ".$e->getMessage().". Use parameter clean to force recreation of database.");
            }
        }

    }
    public function updateAction()
    {
        $this->addTitleTab("InitializeDB");
        $this->addContent(Html::tag("p",null,"Create sqlite database"));

        $db = Database::get();
        if($db->getConfig()->db=="sqlite"){
            if(!file_exists(dirname($db->getConfig()->dbname))){
                mkdir(dirname($db->getConfig()->dbname),0755,true);
            }

            $database = new SQLite3($db->getConfig()->dbname);
            try {
                $database->exec('ALTER TABLE tbl_user ADD mapped_backend TEXT;');

            }catch (\Throwable $e ){
                Logger::error($e->getMessage());
                Notification::error("Init error: ".$e->getMessage().". Use parameter clean to force recreation of database.");
            }
        }

    }
    public function backendAction()
    {
        $form = (new BackendConfigForm())
            ->setIniConfig(Config::module('oidc'));

        $form->handleRequest();

        $this->view->tabs = $this->Module()->getConfigTabs()->activate('backend');
        $this->view->form = $form;
    }
}
